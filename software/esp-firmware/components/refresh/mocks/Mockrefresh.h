/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKREFRESH_H
#define _MOCKREFRESH_H

#include "unity.h"
#include "refresh.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

#ifdef __cplusplus
extern "C" {
#endif

void Mockrefresh_Init(void);
void Mockrefresh_Destroy(void);
void Mockrefresh_Verify(void);




#define initRefresh_Expect() TEST_FAIL_MESSAGE("initRefresh requires _ExpectAndReturn");
#define initRefresh_ExpectAndReturn(cmock_retval) initRefresh_CMockExpectAndReturn(__LINE__, cmock_retval)
void initRefresh_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define initHttpClient_Expect() TEST_FAIL_MESSAGE("initHttpClient requires _ExpectAndReturn");
#define initHttpClient_ExpectAndReturn(cmock_retval) initHttpClient_CMockExpectAndReturn(__LINE__, cmock_retval)
void initHttpClient_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, esp_http_client_handle_t cmock_to_return);
#define clearBoard_Expect(dir, quick) TEST_FAIL_MESSAGE("clearBoard requires _ExpectAndReturn");
#define clearBoard_ExpectAndReturn(dir, quick, cmock_retval) clearBoard_CMockExpectAndReturn(__LINE__, dir, quick, cmock_retval)
void clearBoard_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, Direction dir, bool quick, esp_err_t cmock_to_return);
#define quickClearBoard_Expect(dir) TEST_FAIL_MESSAGE("quickClearBoard requires _ExpectAndReturn");
#define quickClearBoard_ExpectAndReturn(dir, cmock_retval) quickClearBoard_CMockExpectAndReturn(__LINE__, dir, cmock_retval)
void quickClearBoard_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, Direction dir, esp_err_t cmock_to_return);
#define refreshData_Expect(data, client, dir, category) TEST_FAIL_MESSAGE("refreshData requires _ExpectAndReturn");
#define refreshData_ExpectAndReturn(data, client, dir, category, cmock_retval) refreshData_CMockExpectAndReturn(__LINE__, data, client, dir, category, cmock_retval)
void refreshData_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, LEDData* data, esp_http_client_handle_t client, Direction dir, SpeedCategory category, esp_err_t cmock_to_return);
#define refreshBoard_Expect(dir, anim) TEST_FAIL_MESSAGE("refreshBoard requires _ExpectAndReturn");
#define refreshBoard_ExpectAndReturn(dir, anim, cmock_retval) refreshBoard_CMockExpectAndReturn(__LINE__, dir, anim, cmock_retval)
void refreshBoard_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, Direction dir, Animation anim, esp_err_t cmock_to_return);

#ifdef __cplusplus
}
#endif

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
